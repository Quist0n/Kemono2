{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://json-schema.org/draft-07/schema#",
  "$comment": "Saved a local copy in case there is no internet connection available.",
  "title": "Core schema meta-schema",
  "definitions": {
    "schemaArray": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#"
      }
    },
    "nonNegativeInteger": {
      "type": "integer",
      "minimum": 0
    },
    "nonNegativeIntegerDefault0": {
      "allOf": [
        {
          "$ref": "#/definitions/nonNegativeInteger"
        },
        {
          "default": 0
        }
      ]
    },
    "simpleTypes": {
      "enum": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    },
    "stringArray": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": []
    }
  },
  "type": [
    "object",
    "boolean"
  ],
  "properties": {
    "$id": {
      "type": "string",
      "format": "uri-reference"
    },
    "$schema": {
      "type": "string",
      "format": "uri"
    },
    "$ref": {
      "type": "string",
      "format": "uri-reference"
    },
    "$comment": {
      "type": "string"
    },
    "title": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "default": true,
    "readOnly": {
      "type": "boolean",
      "default": false
    },
    "writeOnly": {
      "type": "boolean",
      "default": false
    },
    "examples": {
      "type": "array",
      "items": true
    },
    "multipleOf": {
      "type": "number",
      "exclusiveMinimum": 0
    },
    "maximum": {
      "type": "number"
    },
    "exclusiveMaximum": {
      "type": "number"
    },
    "minimum": {
      "type": "number"
    },
    "exclusiveMinimum": {
      "type": "number"
    },
    "maxLength": {
      "$ref": "#/definitions/nonNegativeInteger"
    },
    "minLength": {
      "$ref": "#/definitions/nonNegativeIntegerDefault0"
    },
    "pattern": {
      "type": "string",
      "format": "regex"
    },
    "additionalItems": {
      "$ref": "#"
    },
    "items": {
      "anyOf": [
        {
          "$ref": "#"
        },
        {
          "$ref": "#/definitions/schemaArray"
        }
      ],
      "default": true
    },
    "maxItems": {
      "$ref": "#/definitions/nonNegativeInteger"
    },
    "minItems": {
      "$ref": "#/definitions/nonNegativeIntegerDefault0"
    },
    "uniqueItems": {
      "type": "boolean",
      "default": false
    },
    "contains": {
      "$ref": "#"
    },
    "maxProperties": {
      "$ref": "#/definitions/nonNegativeInteger"
    },
    "minProperties": {
      "$ref": "#/definitions/nonNegativeIntegerDefault0"
    },
    "required": {
      "$ref": "#/definitions/stringArray"
    },
    "additionalProperties": {
      "$ref": "#"
    },
    "definitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#"
      },
      "default": {}
    },
    "properties": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#"
      },
      "default": {}
    },
    "patternProperties": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#"
      },
      "propertyNames": {
        "format": "regex"
      },
      "default": {}
    },
    "dependencies": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#"
          },
          {
            "$ref": "#/definitions/stringArray"
          }
        ]
      }
    },
    "propertyNames": {
      "$ref": "#"
    },
    "const": true,
    "enum": {
      "type": "array",
      "items": true,
      "minItems": 1,
      "uniqueItems": true
    },
    "type": {
      "anyOf": [
        {
          "$ref": "#/definitions/simpleTypes"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/simpleTypes"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      ]
    },
    "format": {
      "type": "string",
      "oneOf": [
        {
          "const": "plain",
          "description": "Standard string."
        },
        {
          "const": "date-time",
          "description": "Date and time together, for example, `2018-11-13T20:20:39+00:00`."
        },
        {
          "const": "time",
          "description": "Time, for example, `20:20:39+00:00`."
        },
        {
          "const": "date",
          "description": "Date, for example, `2018-11-13`."
        },
        {
          "const": "email",
          "description": "Internet email address, see https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.2"
        },
        {
          "const": "idn-email",
          "description": "The internationalized form of an Internet email address, see https://datatracker.ietf.org/doc/html/rfc6531"
        },
        {
          "const": "hostname",
          "description": "Internet host name, see https://datatracker.ietf.org/doc/html/rfc1123#section-2.1"
        },
        {
          "const": "idn-hostname",
          "description": "An internationalized Internet host name, see https://datatracker.ietf.org/doc/html/rfc5890#section-2.3.2.3"
        },
        {
          "const": "ipv4",
          "description": "IPv4 address, according to dotted-quad ABNF syntax as defined in https://datatracker.ietf.org/doc/html/rfc2673#section-3.2"
        },
        {
          "const": "ipv6",
          "description": "IPv6 address, as defined in https://datatracker.ietf.org/doc/html/rfc2373#section-2.2"
        },
        {
          "const": "uri",
          "description": "A universal resource identifier (URI), according to https://datatracker.ietf.org/doc/html/rfc3986"
        },
        {
          "const": "uri-reference",
          "description": "A URI Reference (either a URI or a relative-reference), according to https://tools.ietf.org/html/rfc3986#section-4.1"
        },
        {
          "const": "iri",
          "description": "The internationalized equivalent of a “uri”, according to https://tools.ietf.org/html/rfc3987"
        },
        {
          "const": "iri-reference",
          "description": "The internationalized equivalent of a “uri-reference”, according to https://datatracker.ietf.org/doc/html/rfc3987"
        },
        {
          "const": "uri-template",
          "description": "A URI Template (of any level) according to https://datatracker.ietf.org/doc/html/rfc6570. If you don't already know what a URI Template is, you probably don't need this value."
        },
        {
          "const": "json-pointer",
          "description": "A JSON Pointer, according to https://datatracker.ietf.org/doc/html/rfc6901. Note that this should be used only when the entire string contains only JSON Pointer content, e.g. `/foo/bar`. JSON Pointer URI fragments, e.g. `#/foo/bar/` should use \"uri-reference\"."
        },
        {
          "const": "relative-json-pointer",
          "description": ""
        },
        {
          "const": "regex",
          "description": "A regular expression, which should be valid according to the ECMA 262 (https://www.ecma-international.org/publications-and-standards/standards/ecma-262/) dialect. Be careful, in practice, JSON schema validators are only required to accept the safe subset of Regular Expressions described elsewhere in this document."
        }
      ],
      "default": "plain"
    },
    "contentMediaType": {
      "type": "string"
    },
    "contentEncoding": {
      "type": "string"
    },
    "if": {
      "$ref": "#"
    },
    "then": {
      "$ref": "#"
    },
    "else": {
      "$ref": "#"
    },
    "allOf": {
      "$ref": "#/definitions/schemaArray"
    },
    "anyOf": {
      "$ref": "#/definitions/schemaArray"
    },
    "oneOf": {
      "$ref": "#/definitions/schemaArray"
    },
    "not": {
      "$ref": "#"
    }
  },
  "default": true
}
